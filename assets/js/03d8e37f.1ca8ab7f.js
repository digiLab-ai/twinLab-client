"use strict";(self.webpackChunktwin_lab_client=self.webpackChunktwin_lab_client||[]).push([[493],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),d=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(a),m=r,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return a?n.createElement(f,l(l({ref:t},s),{},{components:a})):n.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2183:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:1},l="Upload dataset",o={unversionedId:"api_reference/upload_dataset",id:"api_reference/upload_dataset",title:"Upload dataset",description:"Upload a dataset to the twinLab cloud so that it can be queried and used for training.",source:"@site/docs/api_reference/upload_dataset.md",sourceDirName:"api_reference",slug:"/api_reference/upload_dataset",permalink:"/twinLab-client/docs/api_reference/upload_dataset",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/upload_dataset.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API reference",permalink:"/twinLab-client/docs/category/api-reference"},next:{title:"Query dataset",permalink:"/twinLab-client/docs/api_reference/query_dataset"}},p={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Examples",id:"examples",level:2}],s={toc:d},c="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upload-dataset"},"Upload dataset"),(0,r.kt)("p",null,"Upload a dataset to the ",(0,r.kt)("inlineCode",{parentName:"p"},"twinLab")," cloud so that it can be queried and used for training."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Your user information is automatically added to the request using the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filepath_or_df"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"Dataframe"),"; location of csv dataset on local machine or ",(0,r.kt)("inlineCode",{parentName:"li"},"pandas")," dataframe"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dataset_name"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; name for the dataset when saved to the twinLab cloud"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"server"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; {",(0,r.kt)("inlineCode",{parentName:"li"},'"local"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"dev"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"stage"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"cloud"'),"}"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verbose"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"debug"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Local data must be a CSV file. If a ",(0,r.kt)("inlineCode",{parentName:"p"},"pandas")," dataframe is uploaded then a ",(0,r.kt)("inlineCode",{parentName:"p"},"dataset_name")," must be provided. If a local file is uploaded then the filename with the directories removed will be the uploaded file name, unless a value of ",(0,r.kt)("inlineCode",{parentName:"p"},"dataset_name")," is provided, which will be used preferentially."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Upload a local file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import twinlab as tl\n\ndata_filepath = "resources/data/my_data.csv"\ntl.upload_dataset(data_filepath) # This will be my_data.csv in the cloud\n')),(0,r.kt)("p",null,"Upload a ",(0,r.kt)("inlineCode",{parentName:"p"},"pandas")," dataframe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\nimport twinlab as tl\n\ndataframe = pd.DataFrame({'X': [1, 2, 3, 4], 'y': [1, 4, 9, 16]})\ndataset_name = \"test.csv\" # Give the dataset a name in the cloud\ntl.upload_dataset(dataframe, dataset_name)\n")))}u.isMDXComponent=!0}}]);