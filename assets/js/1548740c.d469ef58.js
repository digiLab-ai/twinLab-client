"use strict";(self.webpackChunktwin_lab_client=self.webpackChunktwin_lab_client||[]).push([[932],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=c(t),d=r,f=s["".concat(p,".").concat(d)]||s[d]||u[d]||i;return t?a.createElement(f,l(l({ref:n},m),{},{components:t})):a.createElement(f,l({ref:n},m))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4747:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:4},l="Train campaign",o={unversionedId:"api_reference/train_campaign",id:"api_reference/train_campaign",title:"Train campaign",description:"Train a campaign in the twinLab cloud.",source:"@site/docs/api_reference/train_campaign.md",sourceDirName:"api_reference",slug:"/api_reference/train_campaign",permalink:"/twinLab-client/docs/api_reference/train_campaign",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/train_campaign.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"List datasets",permalink:"/twinLab-client/docs/api_reference/list_datasets"},next:{title:"Query campaign",permalink:"/twinLab-client/docs/api_reference/query_campaign"}},p={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Example",id:"example",level:2}],m={toc:c},s="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(s,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"train-campaign"},"Train campaign"),(0,r.kt)("p",null,"Train a campaign in the ",(0,r.kt)("inlineCode",{parentName:"p"},"twinLab")," cloud."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Your user information is automatically added to the request using the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filepath_or_params"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str")," | ",(0,r.kt)("inlineCode",{parentName:"li"},"dict"),"; filepath to local json or parameters dictionary for training"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"campaign_name"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; name for the final trained model"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"server"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; {",(0,r.kt)("inlineCode",{parentName:"li"},'"local"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"dev"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"stage"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"cloud"'),"}"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verbose"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"debug"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool"))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Train using a local ",(0,r.kt)("inlineCode",{parentName:"p"},"json")," parameters file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'tl.train_campaign("params.json", "my_campaign", verbose=True)\n')),(0,r.kt)("p",null,"Train via a ",(0,r.kt)("inlineCode",{parentName:"p"},"python")," dictionary:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'params = {\n    "dataset": "my_dataset",\n    "inputs": ["X1", "X2"],\n    "outputs": ["y1", "y2"],\n}\ntl.train_campaign(params, "my_campaign", verbose=True)\n')))}u.isMDXComponent=!0}}]);