"use strict";(self.webpackChunktwin_lab_client=self.webpackChunktwin_lab_client||[]).push([[441],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,f=d["".concat(o,".").concat(u)]||d[u]||s[u]||i;return n?a.createElement(f,l(l({ref:t},m),{},{components:n})):a.createElement(f,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:r,l[1]=p;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:7},l="Predict campaign",p={unversionedId:"api_reference/predict_campaign",id:"api_reference/predict_campaign",title:"Predict campaign",description:"Predict from a pre-trained campaign that exists on the twinLab cloud.",source:"@site/docs/api_reference/predict_campaign.md",sourceDirName:"api_reference",slug:"/api_reference/predict_campaign",permalink:"/twinLab-client/docs/api_reference/predict_campaign",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api_reference/predict_campaign.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"List campaigns",permalink:"/twinLab-client/docs/api_reference/list_campaigns"},next:{title:"Delete campaign",permalink:"/twinLab-client/docs/api_reference/delete_campaign"}},o={},c=[{value:"Arguments",id:"arguments",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}],m={toc:c},d="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"predict-campaign"},"Predict campaign"),(0,r.kt)("p",null,"Predict from a pre-trained campaign that exists on the ",(0,r.kt)("inlineCode",{parentName:"p"},"twinLab")," cloud."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Your user information is automatically added to the request using the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"filepath_or_df"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; location of csv dataset on local machine for evaluation or ",(0,r.kt)("inlineCode",{parentName:"li"},"pandas")," dataframe"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"campaign_name"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; name of pre-trained model to use for predictions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"server"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"str"),"; {",(0,r.kt)("inlineCode",{parentName:"li"},'"local"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"dev"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"stage"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"cloud"'),"}"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"verbose"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"debug"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"bool"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Evaluation data must be a CSV file, or a ",(0,r.kt)("inlineCode",{parentName:"p"},"pandas")," dataframe that is interpretable as a CSV."),(0,r.kt)("h2",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"tuple")," containing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"df_mean"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"pandas")," dataframe containing mean predictions"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"df_std"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"pandas")," dataframe containing standard deviation predictions")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Use a local file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import twinlab_client as tl\n\nfilepath = "resources/data/eval.csv" # Local\ncampaign_name = "my_campaign" # Pre-trained\ndf_mean, df_std = tl.sample_campaign(file, campaign_name)\n')),(0,r.kt)("p",null,"Use a ",(0,r.kt)("inlineCode",{parentName:"p"},"pandas")," dataframe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import pandas as pd\nimport twinlab as tl\n\ndf= pd.DataFrame({'X': [1.5, 2.5, 3.5]}\ncampaign_name = \"my_campaign\" # Pre-trained\ntl.upload_dataset(df, campaign_name)\n")))}s.isMDXComponent=!0}}]);